{"version":3,"sources":["../../src/teacher/TeacherAutomatonStr.ts"],"names":["regexToAutomaton","TeacherAutomaton","TeacherAutomatonStr","constructor","regex","description","automaton"],"mappings":"AAAA,OAASA,gBAAT,KAAiC,gCAAjC,CACA,OAASC,gBAAT,KAAiC,uBAAjC,CASA,MAAO,MAAMC,CAAAA,mBAAN,QAAkCD,CAAAA,gBAAiB,CACxDE,WAAW,CAACC,KAAD,CAAgBC,WAAhB,CAAsC,CAC/C,MAAM,CAAEC,SAAS,CAAEN,gBAAgB,CAACI,KAAD,CAA7B,CAAsCC,WAAW,CAAEA,WAAnD,CAAgED,KAAK,CAAEA,KAAvE,CAAN,EACA,KAAKC,WAAL,CAAmBA,WAAW,EAAK,iCAAgCD,KAAM,GAC1E,CAJuD","sourcesContent":["import { regexToAutomaton } from \"../automaton/automaton_type.js\";\r\nimport { TeacherAutomaton } from \"./TeacherAutomaton.js\";\r\n\r\n/**\r\n * This Teacher takes an text representing an automaton as parameter :\\\r\n * The text should be on the form :\\\r\n * [initialStates]\\\r\n * symbol, [stateA] -> [stateB]\\\r\n * [finalStates]\r\n */\r\nexport class TeacherAutomatonStr extends TeacherAutomaton {\r\n  constructor(regex: string, description?: string) {\r\n    super({ automaton: regexToAutomaton(regex), description: description, regex: regex })\r\n    this.description = description || `Automaton accepting L = regex(${regex})`;\r\n  }\r\n}"],"file":"TeacherAutomatonStr.js"}