{"version":3,"sources":["../../src/teacher/TeacherTakingAut.ts"],"names":["boolToString","equivalenceFunction","minimizeAutomaton","MyAutomatonToHis","TeacherTakingAut","constructor","params","automaton","alphabet","regex","description","counter_examples","member","sentence","accept_word_nfa","equiv"],"mappings":"AAAA,OAASA,YAAT,KAA6B,uBAA7B,CAGA,OAASC,mBAAT,KAAoC,YAApC,CACA,OAASC,iBAAT,CAA4BC,gBAA5B,KAAoD,gCAApD,CAEA,MAAO,MAAMC,CAAAA,gBAAoC,CAO/CC,WAAW,CAACC,MAAD,CAAsG,CAC/G,KAAKC,SAAL,CAAiBL,iBAAiB,CAACC,gBAAgB,CAACG,MAAM,CAACC,SAAR,CAAjB,CAAlC,CACA,KAAKC,QAAL,CAAgBF,MAAM,CAACC,SAAP,CAAiBC,QAAjC,CACA,KAAKC,KAAL,CAAaH,MAAM,CAACG,KAAP,EAAgB,wBAA7B,CACA,KAAKC,WAAL,CAAmBJ,MAAM,CAACI,WAAP,EAAsB,wBAAzC,CACA,KAAKC,gBAAL,CAAwBL,MAAM,CAACK,gBAChC,CAMDC,MAAM,CAACC,QAAD,CAA2B,CAC/B,MAAOb,CAAAA,YAAY,CAAC,KAAKO,SAAL,CAAgBO,eAAhB,CAAgCD,QAAhC,CAAD,CACpB,CAEDE,KAAK,CAACR,SAAD,CAA2C,CAC9C,MAAON,CAAAA,mBAAmB,CAAC,IAAD,CAAOM,SAAP,CAC3B,CAzB8C","sourcesContent":["import { boolToString } from \"../tools/Utilities.js\";\r\nimport { Automaton, State } from \"../automaton/Automaton.js\";\r\nimport { Teacher } from \"./Teacher.js\";\r\nimport { equivalenceFunction } from \"./Equiv.js\";\r\nimport { minimizeAutomaton, MyAutomatonToHis } from \"../automaton/automaton_type.js\";\r\n\r\nexport class TeacherTakingAut implements Teacher {\r\n  description: string;\r\n  alphabet: string[];\r\n  regex: string;\r\n  automaton: Automaton;\r\n  counter_examples?: string[];\r\n\r\n  constructor(params: { automaton: Automaton, description?: string, regex?: string, counter_examples?: string[] }) {\r\n    this.automaton = minimizeAutomaton(MyAutomatonToHis(params.automaton));\r\n    this.alphabet = params.automaton.alphabet;\r\n    this.regex = params.regex || \"Teacher with automaton\"\r\n    this.description = params.description || \"Teacher with automaton\";\r\n    this.counter_examples = params.counter_examples;\r\n  }\r\n\r\n  /*\r\n * @param sentence the sentence to test the appartenance\r\n * @returns the string \"0\" if the sentence is accepted else \"1\"\r\n */\r\n  member(sentence: string): string {\r\n    return boolToString(this.automaton!.accept_word_nfa(sentence));\r\n  }\r\n\r\n  equiv(automaton: Automaton): string | undefined {\r\n    return equivalenceFunction(this, automaton)\r\n  }\r\n\r\n}"],"file":"TeacherTakingAut.js"}