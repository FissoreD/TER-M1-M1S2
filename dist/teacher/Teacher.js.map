{"version":3,"sources":["../../src/teacher/Teacher.ts"],"names":["MyAutomatonToHis","minimizeAutomaton","Automaton","State","TeacherAutomaton","TeacherNoAutomaton","TeacherTakingAut","txtToAutomaton","teacher_a_or_baStar","teacherPairZeroAndOne","teacherA3fromLast","teacherEvenAandThreeB","teacherNotAfourthPos","teacher_bStar_a_or_aStart_bStar","alphabet","regex","counter_examples","teacher_b_bStar_a__b_aOrb_star","binaryAddition","sentence","charToBin","char","parseInt","toString","padStart","sentenceAr","Array","from","map","e","fst_term","join","snd_term","trd_term","automatonList","n","states","fill","_","i","addTransition","push","Set","badForNl","automaton","test","teachers"],"mappings":"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","sourcesContent":["import { MyAutomatonToHis } from \"../automaton/automaton_type.js\";\r\nimport { minimizeAutomaton } from \"../automaton/automaton_type.js\";\r\nimport { Automaton, State } from \"../automaton/Automaton.js\";\r\nimport { TeacherAutomaton } from \"./TeacherAutomaton.js\";\r\nimport { TeacherNoAutomaton } from \"./TeacherNoAutomaton.js\";\r\nimport { TeacherTakingAut } from \"./TeacherTakingAut.js\";\r\nimport { txtToAutomaton } from \"../tools/Utilities.js\";\r\n\r\nexport interface Teacher {\r\n  description: string;\r\n  alphabet: string[];\r\n  counter_examples?: string[];\r\n  regex: string;\r\n  automaton?: Automaton;\r\n  member(sentence: string): string;\r\n  equiv(automaton: Automaton): string | undefined;\r\n}\r\n/** \r\n * a teacher accepting a + (ba)*\r\n */\r\nexport let teacher_a_or_baStar = new TeacherAutomaton(\"a+(ba)*\");\r\n\r\n/** \r\n * a teacher accepting the language over {0, 1}\r\n * of strings with even number of 0 and even number of 1\r\n */\r\nexport let teacherPairZeroAndOne = new TeacherAutomaton(\r\n  \"(00+11+(01+10)(00+11)*(01+10))*\",\r\n  `Automaton accepting \\\\(L = \\\\{w \\\\in (0, 1)^* | \\\\#(w_0) \\\\% 2 = 0 \\\\land \\\\#(w_1) \\\\% 2 = 0\\\\}\\\\) <br/> → words with even nb of '0' and even nb of '1'`);\r\n\r\n/**\r\n * a teacher accepting the language over {a, b}\r\n * of strings with an \"a\" in the third letter from end\r\n * (exemple abb, baab, bbabbaab)\r\n */\r\nexport let teacherA3fromLast = new TeacherAutomaton(\r\n  \"(a+b)*a(a+b)(a+b)\",\r\n  `Automaton accepting \\\\(L = \\\\{w \\\\in (a, b)^* | w[-3] = a\\\\}\\\\) <br/>\r\n    → words with an 'a' in the 3rd pos from end`,\r\n)\r\n/**\r\n * a teacher accepting the language over {a, b}\r\n * of strings with any even number of \"a\" or at least three \"b\"\r\n */\r\nexport let teacherEvenAandThreeB = new TeacherAutomaton(\r\n  \"b*a(b+ab*a)*+(a+b)*ba*ba*b(a+b)*\",\r\n  `Automaton accepting \\\\(L = \\\\{w \\\\in (a, b)^* | \\\\#(w_b) \\\\geq 3 \\\\lor \\\\#(w_a) \\\\% 2 = 1\\\\}\\\\)\r\n  <br/> → words with at least 3 'b' or an odd nb of 'a'`\r\n);\r\n\r\n/**\r\n * a teacher accepting the language over {a, b}\r\n * of strings not having an a in a position multiple\r\n * of 4 \r\n */\r\nexport let teacherNotAfourthPos = new TeacherAutomaton(\r\n  \"((a+b)(a+b)(a+b)b)*(a+b+$)(a+b+$)(a+b+$)\",\r\n  `Automaton accepting \\\\(L = \\\\{w \\\\in (a,b)^* \\\\land i \\\\in 4\\\\mathbb{N} | w[i] \\\\neq a \\\\land i \\\\leq len(w)\\\\}\\\\) <br/>\r\n  → words without an 'a' in a position multiple of 4`)\r\n\r\n/**\r\n * a teacher accepting the regex bb*a + a*b*\r\n */\r\nexport let teacher_bStar_a_or_aStart_bStar = new TeacherNoAutomaton(\r\n  { alphabet: \"ab\", regex: \"((bb*a)|(a*b*))\", counter_examples: [\"bba\", \"b\", \"aabb\", \"aba\", \"aa\", \"bbaa\"] },\r\n  `Automaton accepting \\\\(L = regex((bb^*a) + (a^*b^*))\\\\)`)\r\n\r\n/**\r\n * a teacher accepting the regex bb*($ + a(b(a+b))*)\r\n */\r\nexport let teacher_b_bStar_a__b_aOrb_star = new TeacherAutomaton(\"bb*($+a(b(a+b))*)\")\r\n\r\nexport let binaryAddition = new TeacherNoAutomaton(\r\n  {\r\n    alphabet: \"012345678\",\r\n    regex: sentence => {\r\n      let charToBin = (char: string) =>\r\n        (parseInt(char) >>> 0).toString(2).padStart(3, \"0\")\r\n      let sentenceAr = Array.from(sentence).map(e => charToBin(e))\r\n      let fst_term = parseInt(sentenceAr.map(e => e[0]).join(''), 2);\r\n      let snd_term = parseInt(sentenceAr.map(e => e[1]).join(''), 2);\r\n      let trd_term = parseInt(sentenceAr.map(e => e[2]).join(''), 2);\r\n      return fst_term + snd_term == trd_term;\r\n    },\r\n    counter_examples: []\r\n  },\r\n  `Automaton accepting the sum between binary words, exemple : <br>\r\n  <pre>\r\n  0101 + \r\n  1001 = \r\n  1110 </pre>\r\n  we encode this sum as the concatenation of vectors of size 3 : <br>\r\n  <pre>\r\n  fst column 011 = 3\r\n  snd column 101 = 5 \r\n  trd column 001 = 1 \r\n  fth column 110 = 6 </pre>\r\n  so 3516 which is a valid word for the sum <br>\r\n  <input class=\"sum-calc sum-calc-style\" onkeyup=\"update_input()\"> + <br>\r\n  <input class=\"sum-calc sum-calc-style\" onkeyup=\"update_input()\"> = <br>\r\n  <input class=\"sum-calc sum-calc-style\" onkeyup=\"update_input()\"><br>\r\n  <button id=\"calc\" onclick=\"send_calc_button()\">Send</button>\r\n  <span class=\"sum-calc-style\" id=\"add-res\"></span>\r\n  `,\r\n)\r\n\r\nlet automatonList: Automaton[] = []\r\nfor (let n = 4; n < 5 + 1; n++) {\r\n  let states: State[] = new Array(n).fill(0).map((_, i) => new State(i + \"\", i == 0, i < n / 2, ['a', 'b']));\r\n\r\n  for (let i = 0; i < n - 1; i++)\r\n    states[i].addTransition('a', states[i + 1])\r\n  states[n - 1].addTransition('a', states[0]);\r\n  states[0].addTransition('b', states[0]);\r\n  for (let i = 2; i < n; i++)\r\n    states[i].addTransition('b', states[i - 1])\r\n  states[1].addTransition('b', states[n - 1])\r\n  automatonList.push(minimizeAutomaton(MyAutomatonToHis(new Automaton(new Set(states)))));\r\n}\r\n\r\nlet badForNl = new TeacherTakingAut({ automaton: automatonList[0] });\r\n\r\nlet test = new TeacherTakingAut({\r\n  automaton: txtToAutomaton(`[0]\r\n  a,[0]->[0]\r\n  b,[0]->[1]\r\n  b,[1]->[1]\r\n  [0]`)\r\n})\r\n\r\nexport let teachers = [test, badForNl, teacher_a_or_baStar, teacher_b_bStar_a__b_aOrb_star, binaryAddition, teacherA3fromLast, teacherEvenAandThreeB, teacherNotAfourthPos, teacherPairZeroAndOne, teacher_bStar_a_or_aStart_bStar]"],"file":"Teacher.js"}