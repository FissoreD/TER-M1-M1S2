{"version":3,"sources":["../../src/html_interactions/HTML_NL_star.ts"],"names":["NL_star","HTML_LernerBase","HTML_NL_star","constructor","teacher","add_row_html","parent","fst","head","row_elts","colspan","rowspan","row","undefined","lerner","prime_lines","includes","className","close_message","close_rep","observation_table","consistent_message","s1","s2","new_col","table_to_update_after_equiv","answer","add_elt_in_E"],"mappings":"AACA,OAASA,OAAT,KAAwB,uBAAxB,CACA,OAASC,eAAT,KAAgC,sBAAhC,CAEA,MAAO,MAAMC,CAAAA,YAAN,QAA2BD,CAAAA,eAAyB,CACzDE,WAAW,CAACC,OAAD,CAAmB,CAC5B,MAAM,GAAIJ,CAAAA,OAAJ,CAAYI,OAAZ,CAAN,CACD,CAEDC,YAAY,CACVC,MADU,CACuBC,GADvB,CACgDC,IADhD,CAEVC,QAFU,CAEUC,OAAe,CAAG,CAF5B,CAE+BC,OAAe,CAAG,CAFjD,CAGV,CACA,GAAIC,CAAAA,GAAG,CAAG,MAAMP,YAAN,CAAmBC,MAAnB,CAA2BC,GAA3B,CAAgCC,IAAhC,CAAsCC,QAAtC,CAAgDC,OAAhD,CAAyDC,OAAzD,CAAV,CACA,GAAIH,IAAI,EAAIK,SAAR,EAAqB,KAAKC,MAAL,CAAYC,WAAZ,CAAwBC,QAAxB,CAAiCR,IAAjC,CAAzB,CAAiE,CAC/DI,GAAG,CAACK,SAAJ,EAAiB,WAClB,CACD,MAAOL,CAAAA,GACR,CAEDM,aAAa,CAACC,SAAD,CAAoB,CAC/B,MAAQ;AACZ;AACA,gBAAgBA,SAAU,OAAM,KAAKL,MAAL,CAAYM,iBAAZ,CAA8BD,SAA9B,CAAyC,WAAUA,SAAU,qEAAoE,KAAKL,MAAL,CAAYM,iBAAZ,CAA8BD,SAA9B,CAAyC;AAC1M,yBAAyBA,SAAU,gBAChC,CAEDE,kBAAkB,CAACC,EAAD,CAAaC,EAAb,CAAyBC,OAAzB,CAA0C,CAC1D,MAAQ;AACZ;AACA,cAAcF,EAAE,CAAGA,EAAH,CAAQ,QAAI,iBAAgBC,EAAE,CAAGA,EAAH,CAAQ,QAAI,kBAAiBC,OAAO,CAAC,CAAD,CAAI;AACtF,gBAAgBF,EAAE,CAAGA,EAAH,CAAQ,QAAI,sBAAqBC,EAAE,CAAGA,EAAH,CAAQ,QAAI;AACjE,oBAAoBD,EAAE,CAAGA,EAAH,CAAQ,QAAI,WAAUE,OAAO,CAAC,CAAD,CAAI,2BAA0BD,EAAE,CAAGA,EAAH,CAAQ,QAAI,WAAUC,OAAO,CAAC,CAAD,CAAI;AACpH,qCAAqCA,OAAQ,wCAAuCF,EAAE,CAAGA,EAAH,CAAQ,QAAI,WAAUE,OAAQ,SAAQD,EAAE,CAAGA,EAAH,CAAQ,QAAI,WAAUC,OAAQ,MACzJ,CAEDC,2BAA2B,CAACC,MAAD,CAAuB,CAChD,KAAKZ,MAAL,CAAYa,YAAZ,CAAyBD,MAAzB,CACD,CAlCwD","sourcesContent":["import { Teacher } from \"../Teacher.js\";\r\nimport { NL_star } from \"../lerners/NL_star.js\";\r\nimport { HTML_LernerBase } from \"./HTML_LernerBase.js\";\r\n\r\nexport class HTML_NL_star extends HTML_LernerBase<NL_star> {\r\n  constructor(teacher: Teacher) {\r\n    super(new NL_star(teacher));\r\n  }\r\n\r\n  add_row_html(\r\n    parent: HTMLTableSectionElement, fst: string | undefined, head: string | undefined,\r\n    row_elts: string[], colspan: number = 1, rowspan: number = 1\r\n  ) {\r\n    let row = super.add_row_html(parent, fst, head, row_elts, colspan, rowspan);\r\n    if (head != undefined && this.lerner.prime_lines.includes(head)) {\r\n      row.className += \"prime-row\"\r\n    }\r\n    return row;\r\n  }\r\n\r\n  close_message(close_rep: string) {\r\n    return `\r\n    The table is not closed since\r\n    \\\\(\\\\{row(${close_rep}) = ${this.lerner.observation_table[close_rep]} \\\\land ${close_rep} \\\\in SA\\\\}\\\\) but \\\\(\\\\{\\\\nexists s \\\\in S | row(s) \\\\sqsupseteq ${this.lerner.observation_table[close_rep]}\\\\}\\\\)\r\n    I'm going to move \"${close_rep}\" from SA to S`\r\n  }\r\n\r\n  consistent_message(s1: string, s2: string, new_col: string) {\r\n    return `\r\n    The table is not consistent :\r\n    take \\\\(${s1 ? s1 : \"ε\"}\\\\in S \\\\land ${s2 ? s2 : \"ε\"} \\\\in S \\\\land ${new_col[0]} \\\\in \\\\Sigma \\\\)\r\n    \\\\(\\\\{row(${s1 ? s1 : \"ε\"}) \\\\sqsubseteq row(${s2 ? s2 : \"ε\"})\\\\}\\\\)\r\n    but \\\\(\\\\{row(${s1 ? s1 : \"ε\"} \\\\circ ${new_col[0]}) \\\\not\\\\sqsubseteq row(${s2 ? s2 : \"ε\"} \\\\circ ${new_col[0]})\\\\}\\\\)\r\n    I'm going to add the column \\\\(${new_col} \\\\in \\\\Sigma \\\\circ E\\\\) since \\\\(T(${s1 ? s1 : \"ε\"} \\\\circ ${new_col}) > T(${s2 ? s2 : \"ε\"} \\\\circ ${new_col})\\\\)`\r\n  }\r\n\r\n  table_to_update_after_equiv(answer: string): void {\r\n    this.lerner.add_elt_in_E(answer!);\r\n  }\r\n}"],"file":"HTML_NL_star.js"}