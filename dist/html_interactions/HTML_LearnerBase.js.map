{"version":3,"sources":["../../src/html_interactions/HTML_LearnerBase.ts"],"names":["automatonDiv","clear_automaton_HTML","message","tableHTML","HTML_LearnerBase","table_counter","constructor","learner","table_header","createTHead","table_body","createTBody","pile_actions","draw_table","add_row_html","undefined","E","fst","s","S","row","Array","from","observation_table","length","SA","document","getElementById","classList","remove","parent","head","row_elts","colspan","rowspan","convert_to_epsilon","e","create_cell_with_text","txt","cell","insertCell","innerHTML","insertRow","style","borderTop","createElement","setAttribute","appendChild","letter","clear_table","graphic_next_step","finish","shift","close_action","consistence_action","send_automaton_action","member_number","equiv_number","automaton","state_number","transition_number","MathJax","typeset","close_rep","is_close","innerText","close_message","push","add_elt_in_S","consistence_rep","is_consistent","s1","s2","new_col","consistent_message","add_elt_in_E","make_automaton","initiate_graph","add_automaton_listener","answer","make_equiv","table_to_update_after_equiv","input","setB","addEventListener","restart","nextB","draw_next_step","value","slice","acceptB","answerP","aut_answer","accept_word_nfa","go_to_end","make_all_queries"],"mappings":"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","sourcesContent":["import { Automaton } from \"../automaton/Automaton.js\";\r\nimport { LearnerBase } from \"../learners/LearnerBase.js\";\r\nimport { automatonDiv, clear_automaton_HTML, message, tableHTML } from \"../Main.js\";\r\nimport { myFunction } from \"../tools/Utilities.js\";\r\n\r\nexport abstract class HTML_LearnerBase<T extends LearnerBase> {\r\n  learner: T;\r\n\r\n  table_header: HTMLTableSectionElement;\r\n  table_body: HTMLTableSectionElement;\r\n  pile_actions: myFunction<void, void>[];\r\n  automaton: Automaton | undefined;\r\n  table_counter = 0;\r\n\r\n  constructor(learner: T) {\r\n    this.learner = learner;\r\n\r\n    this.table_header = tableHTML.createTHead();\r\n    this.table_body = tableHTML.createTBody();\r\n    this.pile_actions = [() => this.draw_table()];\r\n  }\r\n\r\n  draw_table() {\r\n    this.add_row_html(this.table_header, \"Table\" + this.table_counter++, undefined, this.learner.E, 2);\r\n\r\n    /**\r\n     The first {@link S}.length rows of the table start with the S symbol\r\n    */\r\n    var fst: string | undefined = \"S\";\r\n    for (var s of this.learner.S) {\r\n      const row = Array.from(this.learner.observation_table[s]);\r\n      this.add_row_html(this.table_body, fst, s, row, 1, fst ? this.learner.S.length : 1);\r\n      fst = undefined;\r\n    }\r\n    /**\r\n     In the second part of the table, rows start with the SA symbol\r\n    */\r\n    var fst: string | undefined = \"SA\";\r\n    for (var s of this.learner.SA) {\r\n      const row = Array.from(this.learner.observation_table[s]);\r\n      this.add_row_html(this.table_body, fst, s, row, 1, fst ? this.learner.SA.length : 1);\r\n      fst = undefined;\r\n    }\r\n\r\n    document.getElementById('tableHead')?.classList.remove('up');\r\n  }\r\n\r\n  add_row_html(\r\n    parent: HTMLTableSectionElement, fst: string | undefined, head: string | undefined,\r\n    row_elts: string[], colspan: number = 1, rowspan: number = 1\r\n  ) {\r\n    let convert_to_epsilon = (e: string) => e == \"\" ? \"&epsilon;\" : e;\r\n    let create_cell_with_text = (row: HTMLTableRowElement, txt: string) => {\r\n      var cell = row.insertCell();\r\n      cell.innerHTML = `${convert_to_epsilon(txt)}`\r\n    };\r\n\r\n    var row = parent.insertRow();\r\n    if (fst) {\r\n      row.style.borderTop = \"2px solid #009879\";\r\n      var cell = document.createElement('th');\r\n      cell.setAttribute(\"rowspan\", rowspan + \"\");\r\n      cell.setAttribute(\"colspan\", colspan + \"\");\r\n      cell.innerHTML = convert_to_epsilon(fst);\r\n      row.appendChild(cell);\r\n    }\r\n    if (head != undefined) create_cell_with_text(row, head);\r\n    for (var letter of row_elts)\r\n      create_cell_with_text(row, letter)\r\n    return row;\r\n  }\r\n\r\n  clear_table() {\r\n    this.table_body.innerHTML = \"\";\r\n    this.table_header.innerHTML = \"\";\r\n  }\r\n\r\n\r\n  graphic_next_step() {\r\n    if (this.learner.finish) {\r\n      if (message.innerHTML != \"\")\r\n        message.innerHTML = \"The Teacher has accepted the automaton\";\r\n    }\r\n    else if (this.pile_actions.length > 0) {\r\n      this.pile_actions.shift()!()\r\n    }\r\n    else if (!this.close_action()) { }\r\n    else if (!this.consistence_action()) { }\r\n    else this.send_automaton_action()\r\n    message.innerHTML =\r\n      `Queries = ${this.learner.member_number} - Membership = ${this.learner.equiv_number}` + (this.learner.automaton ? ` - States = ${this.learner.automaton?.state_number()} - Transitions = ${this.learner.automaton?.transition_number()}` : ``) + `<br> ${message.innerHTML}`\r\n    // @ts-ignore\r\n    MathJax.typeset()\r\n    document.getElementById('messageHead')?.classList.remove('up');\r\n  }\r\n\r\n  close_action(): boolean {\r\n    const close_rep = this.learner.is_close();\r\n    if (close_rep != undefined) {\r\n      message.innerText =\r\n        this.close_message(close_rep);\r\n      this.pile_actions.push(() => {\r\n        message.innerText = \"\";\r\n        this.learner.add_elt_in_S(close_rep);\r\n        this.clear_table();\r\n        this.draw_table();\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  consistence_action(): boolean {\r\n    const consistence_rep = this.learner.is_consistent()\r\n    if (consistence_rep != undefined) {\r\n      let s1 = consistence_rep[0];\r\n      let s2 = consistence_rep[1];\r\n      let new_col = consistence_rep[2]\r\n      message.innerText = this.consistent_message(s1, s2, new_col);\r\n      this.pile_actions.push(() => {\r\n        message.innerText = \"\";\r\n        this.learner.add_elt_in_E(new_col);\r\n        this.clear_table();\r\n        this.draw_table();\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  send_automaton_action() {\r\n    message.innerText =\r\n      `The table is consistent and closed, I will send an automaton`;\r\n    let automaton = this.learner.make_automaton();\r\n\r\n    this.automaton = automaton;\r\n    this.pile_actions.push(() => {\r\n      message.innerHTML = \"\";\r\n      automaton.initiate_graph();\r\n      this.add_automaton_listener();\r\n      let answer = this.learner.make_equiv(automaton);\r\n\r\n\r\n      if (answer != undefined) {\r\n        message.innerText =\r\n          `The sent automaton is not valid, \r\n          here is a counter-exemple ${answer}`;\r\n        this.pile_actions.push(() => {\r\n          message.innerHTML = \"\";\r\n          clear_automaton_HTML();\r\n          this.table_to_update_after_equiv(answer!)\r\n          this.clear_table();\r\n          this.draw_table();\r\n        })\r\n        return;\r\n      }\r\n      this.learner.finish = true;\r\n    });\r\n  }\r\n\r\n  abstract close_message(close_rep: string): string;\r\n\r\n  abstract consistent_message(s1: string, s2: string, new_col: string): string;\r\n\r\n  abstract table_to_update_after_equiv(answer: string): void;\r\n\r\n  add_automaton_listener() {\r\n    let input = document.createElement(\"input\");\r\n    let setB = document.createElement(\"button\");\r\n    setB.innerHTML = \"Reinitialize automaton\";\r\n    setB.addEventListener('click', () => {\r\n      this.automaton!.restart();\r\n      this.automaton!.initiate_graph();\r\n    })\r\n    let nextB = document.createElement(\"button\")\r\n    nextB.innerHTML = \"Next char\";\r\n    nextB.addEventListener('click', () => {\r\n      this.automaton!.draw_next_step(input.value[0])\r\n      input.value = input.value.slice(1);\r\n    });\r\n    automatonDiv.appendChild(input);\r\n    automatonDiv.appendChild(nextB);\r\n    automatonDiv.appendChild(setB);\r\n    let acceptB = document.createElement(\"button\");\r\n    let answerP = document.createElement(\"p\");\r\n    acceptB.innerHTML = \"In automaton\";\r\n    acceptB.addEventListener(\"click\", () => {\r\n      let aut_answer = this.automaton?.accept_word_nfa(input.value);\r\n      answerP.innerHTML = `The word ${input.value} is${aut_answer ? \"\" : \" not\"} accepted`\r\n    })\r\n    automatonDiv.appendChild(acceptB);\r\n    automatonDiv.appendChild(answerP);\r\n  }\r\n\r\n  go_to_end() {\r\n    if (this.learner.finish) return\r\n    this.learner.make_all_queries()\r\n    this.clear_table()\r\n    this.draw_table()\r\n    clear_automaton_HTML();\r\n    this.learner.automaton?.initiate_graph()\r\n    this.graphic_next_step()\r\n  }\r\n\r\n}"],"file":"HTML_LearnerBase.js"}