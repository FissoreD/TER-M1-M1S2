{"version":3,"sources":["../../src/html_interactions/HTML_L_star.ts"],"names":["L_star","HTML_LearnerBase","HTML_L_star","constructor","teacher","close_message","close_rep","row","learner","observation_table","consistent_message","s1","s2","new_col","fstChar","sndChar","length","substring","replaceEpsilon"],"mappings":"AACA,OAASA,MAAT,KAAuB,uBAAvB,CACA,OAASC,gBAAT,KAAiC,uBAAjC,CAEA,MAAO,MAAMC,CAAAA,WAAN,QAA0BD,CAAAA,gBAAyB,CACxDE,WAAW,CAACC,OAAD,CAAmB,CAC5B,MAAM,GAAIJ,CAAAA,MAAJ,CAAWI,OAAX,CAAN,CACD,CAEDC,aAAa,CAACC,SAAD,CAAoB,CAC/B,GAAIC,CAAAA,GAAG,CAAG,KAAKC,OAAL,CAAaC,iBAAb,CAA+BH,SAA/B,CAAV,CACA,MAAQ,qCAAoCA,SAAU;AAC1D,OAAOA,SAAU,+BAGd,CAEDI,kBAAkB,CAACC,EAAD,CAAaC,EAAb,CAAyBC,OAAzB,CAA0C,CAC1D,GAAIC,CAAAA,OAAO,CAAGD,OAAO,CAAC,CAAD,CAArB,CACEE,OAAO,CAAGF,OAAO,CAACG,MAAR,EAAkB,CAAlB,CAAsB,QAAtB,CAA4BH,OAAO,CAACI,SAAR,CAAkB,CAAlB,CADxC,CAEA,MAAQ;AACZ,cAAc,KAAKC,cAAL,CAAoBP,EAApB,CAAwB,WAAU,KAAKO,cAAL,CAAoBN,EAApB,CAAwB,aAAYD,EAAE,CAAGE,OAAO,CAAC,CAAD,CAAI,WAAUD,EAAE,CAAGC,OAAO,CAAC,CAAD,CAAI;AAC9H,sBAAsBC,OAAQ,MAAKC,OAAQ,gCAA+B,KAAKG,cAAL,CAAoBP,EAApB,CAAwB,MAAKE,OAAQ,SAAQ,KAAKK,cAAL,CAAoBN,EAApB,CAAwB,MAAKC,OAAQ,GAKzJ,CAvBuD","sourcesContent":["import { Teacher } from \"../teacher/Teacher.js\";\r\nimport { L_star } from \"../learners/L_star.js\";\r\nimport { HTML_LearnerBase } from \"./HTML_LearnerBase.js\";\r\n\r\nexport class HTML_L_star extends HTML_LearnerBase<L_star> {\r\n  constructor(teacher: Teacher) {\r\n    super(new L_star(teacher));\r\n  }\r\n\r\n  close_message(close_rep: string) {\r\n    let row = this.learner.observation_table[close_rep]\r\n    return `The table is not closed since row(${close_rep}) is not present in S.\r\n    \"${close_rep}\" will be moved from SA to S.`\r\n    // `The table is not closed since there is row(${close_rep}) = \"${row}\" where \"${close_rep}\" is in SA and \"${row}\" is not present in S.\r\n    // \"${close_rep}\" will be moved from SA to S.`\r\n  }\r\n\r\n  consistent_message(s1: string, s2: string, new_col: string) {\r\n    let fstChar = new_col[0],\r\n      sndChar = new_col.length == 1 ? \"ε\" : new_col.substring(1);\r\n    return `The table is not consistent since :\r\n        row(${this.replaceEpsilon(s1)}) = row(${this.replaceEpsilon(s2)}) but row(${s1 + new_col[0]}) ≠ row(${s2 + new_col[0]});\r\n        The column \"${fstChar} ∘ ${sndChar}\" will be added in E since T(${this.replaceEpsilon(s1)} ∘ ${new_col}) ≠ T(${this.replaceEpsilon(s2)} ∘ ${new_col})`\r\n    // `The table is not consistent since :\r\n    //     row(${s1 ? s1 : \"ε\"}) = row(${s2 ? s2 : \"ε\"}) where ${s1 ? s1 : \"ε\"}, ${s2 ? s2 : \"ε\"} ∈ S but row(${s1 + new_col[0]}) ≠ row(${s2 + new_col[0]});\r\n    //     The column \"${new_col}\" will be added in E since T(${s1 + new_col}) ≠ T(${s2 + new_col}) \r\n    //     [Note : ${new_col} = ${fstChar} ∘ ${sndChar} and ${fstChar} ∈ Σ and ${sndChar} ∈ E]`\r\n  }\r\n}"],"file":"HTML_L_star.js"}