{"version":3,"sources":["../../src/test_nodejs/CompareBenchMark.ts"],"names":["readdirSync","readFileSync","clearFile","csvHead","printCsvCompare","printInfo","writeToFile","TeacherAutomaton","L_star","NL_star","Automaton","myLog","benchMark","path","fileName","files","automata","minStateNb","maxStateNb","toWrite","underFolder","a","startsWith","newPath","file","endsWith","repeat","console","error","content","toString","automaton","strToAutomaton","teacher","regex","state_number","push","description","map","e","sort","b","forEach","index","length","L","NL","toLog","make_all_queries","consistence_counter","closedness_counter","equiv_number"],"mappings":"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","sourcesContent":["import { readdirSync, readFileSync } from \"fs\";\r\nimport { clearFile, csvHead, printCsvCompare, printInfo, writeToFile } from \"./PrintFunction.js\";\r\nimport { TeacherAutomaton } from \"../teacher/TeacherAutomaton.js\";\r\nimport { L_star } from \"../learners/L_star.js\";\r\nimport { NL_star } from \"../learners/NL_star.js\";\r\nimport { Teacher } from \"../teacher/Teacher.js\";\r\nimport { Automaton } from \"../automaton/Automaton.js\";\r\nimport { myLog } from \"../tools/Utilities.js\";\r\n\r\nlet benchMark = true;\r\n\r\nlet path = (\"./statistics/\" + (benchMark ? \"benchMark/\" : \"automata/\")),\r\n  fileName = benchMark ? \"benchMark\" : \"randomAutomata\",\r\n  files = readdirSync(path),\r\n  automata: [Teacher, string][] = [],\r\n  minStateNb = 0,\r\n  maxStateNb = 63,\r\n  toWrite = false;\r\n\r\nfor (const underFolder of files) {\r\n  myLog({ a: [underFolder] });\r\n  if (!underFolder.startsWith(\"1.5\")) continue\r\n\r\n  let newPath = path + underFolder + \"/\";\r\n  let files = readdirSync(newPath);\r\n  for (const file of files) {\r\n    if (!file.endsWith('.ba')) continue\r\n    myLog({ a: [\"=\".repeat(90)] })\r\n    console.error(\"Creating automaton of file\", underFolder + \"/\" + file);\r\n    myLog({ a: [\"Creating automaton of file\", underFolder + \"/\" + file] });\r\n    let content = readFileSync(newPath + file).toString();\r\n    let automaton = Automaton.strToAutomaton(content);\r\n    let teacher = new TeacherAutomaton({ automaton: automaton, regex: underFolder + \"/\" + file })\r\n    myLog({ a: [\"State number is\", \"-\".repeat(50), teacher.automaton.state_number()] })\r\n    if (\r\n      teacher.automaton.state_number() > minStateNb\r\n      && teacher.automaton.state_number() < maxStateNb\r\n    ) {\r\n      automata.push([teacher, underFolder + \"/\" + file]);\r\n      teacher.description = teacher.automaton.state_number() + \"\"\r\n    }\r\n  }\r\n}\r\nmyLog({ a: [automata.map(e => e[1])] });\r\n\r\nmyLog({ a: [\"=\".repeat(90)] })\r\nmyLog({ a: [\"Automata created the ordered list of states is :\"] });\r\nautomata.sort((a, b) => a[0].automaton!.state_number() - b[0].automaton!.state_number())\r\nautomata.forEach(a => myLog({ a: [a[0].automaton!.state_number()] }));\r\n\r\n\r\n\r\nif (toWrite) {\r\n  clearFile(fileName);\r\n  writeToFile(fileName, csvHead);\r\n}\r\n\r\n\r\nfor (let index = 0; index < automata.length; index++) {\r\n  const [teacher, file] = automata[index];\r\n\r\n  let L = new L_star(teacher),\r\n    NL = new NL_star(teacher);\r\n\r\n  myLog({ a: [\"=\".repeat(90)] })\r\n  console.error(file, \"Current benchmark :\", index, \"/\", automata.length, \"With state number\", teacher.automaton!.state_number());\r\n  myLog({ a: [file, \"Current benchmark :\", index, \"/\", automata.length, \"With state number\", teacher.automaton!.state_number()], toLog: true });\r\n\r\n\r\n  L.make_all_queries();\r\n\r\n  console.error(\"In L*\");\r\n  myLog({ a: [printInfo(L, \"L*\")], toLog: true });\r\n\r\n\r\n  NL.make_all_queries();\r\n\r\n  myLog({ a: [\"-\".repeat(80)] });\r\n  console.error(\"In NL*\");\r\n  myLog({ a: [printInfo(NL, \"NL*\")], toLog: true });\r\n\r\n  if (L.consistence_counter > 1 && L.closedness_counter > 1 &&\r\n    NL.consistence_counter > 1 && NL.closedness_counter > 1 &&\r\n    L.equiv_number > NL.equiv_number && NL.equiv_number > 0) {\r\n    myLog({ a: [printInfo(L, \"L*\")], toLog: true });\r\n    myLog({ a: [printInfo(NL, \"NL*\")], toLog: true });\r\n    myLog({ a: [printCsvCompare(L, NL)], toLog: true });\r\n    break\r\n  }\r\n\r\n  if (toWrite) writeToFile(fileName, printCsvCompare(L, NL))\r\n}"],"file":"CompareBenchMark.js"}