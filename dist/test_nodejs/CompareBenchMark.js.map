{"version":3,"sources":["../../src/test_nodejs/CompareBenchMark.ts"],"names":["readdirSync","readFileSync","txtToAutomaton","clearFile","csvHead","printCsvCompare","printInfo","writeToFile","TeacherTakingAut","L_star","NL_star","path","fileName","files","automata","toWrite","file","endsWith","console","log","repeat","error","content","toString","automaton","push","regex","sort","a","b","state_number","forEach","index","length","teacher","description","L","NL","make_all_queries"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,YAAtB,KAA0C,IAA1C,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,SAAT,CAAoBC,OAApB,CAA6BC,eAA7B,CAA8CC,SAA9C,CAAyDC,WAAzD,KAA4E,oBAA5E,CACA,OAASC,gBAAT,KAAiC,gCAAjC,CACA,OAASC,MAAT,KAAuB,uBAAvB,CACA,OAASC,OAAT,KAAwB,wBAAxB,CAGA,GAAIC,CAAAA,IAAI,CAAG,yBAAX,CACEC,QAAQ,CAAG,WADb,CAEEC,KAAK,CAAGb,WAAW,CAACW,IAAD,CAFrB,CAGEG,QAA6B,CAAG,EAHlC,CAIEC,OAAO,CAAG,KAJZ,CAOA,IAAK,KAAMC,CAAAA,IAAX,GAAmBH,CAAAA,KAAnB,CAA0B,CACxB,GAAI,CAACG,IAAI,CAACC,QAAL,CAAc,KAAd,CAAL,CAA2B,SAC3BC,OAAO,CAACC,GAAR,CAAY,IAAIC,MAAJ,CAAW,EAAX,CAAZ,EACAF,OAAO,CAACG,KAAR,CAAc,4BAAd,CAA4CL,IAA5C,EACAE,OAAO,CAACC,GAAR,CAAY,4BAAZ,CAA0CH,IAA1C,EACA,GAAIM,CAAAA,OAAO,CAAGrB,YAAY,CAACU,IAAI,CAAGK,IAAR,CAAZ,CAA0BO,QAA1B,EAAd,CACA,GAAIC,CAAAA,SAAS,CAAGtB,cAAc,CAACoB,OAAD,CAA9B,CACAR,QAAQ,CAACW,IAAT,CAAc,CAAC,GAAIjB,CAAAA,gBAAJ,CAAqB,CAAEgB,SAAS,CAAEA,SAAb,CAAwBE,KAAK,CAAEV,IAA/B,CAArB,CAAD,CAA8DA,IAA9D,CAAd,CACD,CAEDE,OAAO,CAACC,GAAR,CAAY,IAAIC,MAAJ,CAAW,EAAX,CAAZ,EACAF,OAAO,CAACC,GAAR,CAAY,kDAAZ,EACAL,QAAQ,CAACa,IAAT,CAAc,CAACC,CAAD,CAAIC,CAAJ,GAAUD,CAAC,CAAC,CAAD,CAAD,CAAKJ,SAAL,CAAgBM,YAAhB,GAAiCD,CAAC,CAAC,CAAD,CAAD,CAAKL,SAAL,CAAgBM,YAAhB,EAAzD,EACAhB,QAAQ,CAACiB,OAAT,CAAiBH,CAAC,EAAIV,OAAO,CAACC,GAAR,CAAYS,CAAC,CAAC,CAAD,CAAD,CAAKJ,SAAL,CAAgBM,YAAhB,EAAZ,CAAtB,EAEA,GAAIf,OAAJ,CAAa,CACXZ,SAAS,CAACS,QAAD,CAAT,CACAL,WAAW,CAACK,QAAD,CAAWR,OAAX,CACZ,CAGD,IAAK,GAAI4B,CAAAA,KAAK,CAAG,CAAjB,CAAoBA,KAAK,CAAGlB,QAAQ,CAACmB,MAArC,CAA6CD,KAAK,EAAlD,CAAsD,CACpD,KAAM,CAACE,OAAD,CAAUlB,IAAV,EAAkBF,QAAQ,CAACkB,KAAD,CAAhC,CAEAE,OAAO,CAACC,WAAR,CAAsBH,KAAK,CAAG,EAA9B,CAEA,GAAII,CAAAA,CAAC,CAAG,GAAI3B,CAAAA,MAAJ,CAAWyB,OAAX,CAAR,CACEG,EAAE,CAAG,GAAI3B,CAAAA,OAAJ,CAAYwB,OAAZ,CADP,CAGAhB,OAAO,CAACC,GAAR,CAAY,IAAIC,MAAJ,CAAW,EAAX,CAAZ,EACAF,OAAO,CAACG,KAAR,CAAcW,KAAd,CAAqB,qBAArB,CAA4ChB,IAA5C,CAAkD,mBAAlD,CAAuEkB,OAAO,CAACV,SAAR,CAAmBM,YAAnB,EAAvE,EACAZ,OAAO,CAACC,GAAR,CAAYa,KAAZ,CAAmB,qBAAnB,CAA0ChB,IAA1C,CAAgD,mBAAhD,CAAqEkB,OAAO,CAACV,SAAR,CAAmBM,YAAnB,EAArE,EAEAZ,OAAO,CAACC,GAAR,CAAY,OAAZ,EAEAiB,CAAC,CAACE,gBAAF,GACApB,OAAO,CAACC,GAAR,CAAYb,SAAS,CAAC8B,CAAD,CAAI,IAAJ,CAArB,EACAlB,OAAO,CAACC,GAAR,CAAY,IAAIC,MAAJ,CAAW,EAAX,CAAZ,EACAF,OAAO,CAACC,GAAR,CAAY,QAAZ,EACAkB,EAAE,CAACC,gBAAH,GACApB,OAAO,CAACC,GAAR,CAAYb,SAAS,CAAC+B,EAAD,CAAK,KAAL,CAArB,EAEAnB,OAAO,CAACC,GAAR,CAAYd,eAAe,CAAC+B,CAAD,CAAIC,EAAJ,CAA3B,EAEA,GAAItB,OAAJ,CAAaR,WAAW,CAACK,QAAD,CAAWP,eAAe,CAAC+B,CAAD,CAAIC,EAAJ,CAA1B,CACzB","sourcesContent":["import { readdirSync, readFileSync } from \"fs\";\r\nimport { txtToAutomaton } from \"../tools/Utilities.js\";\r\nimport { clearFile, csvHead, printCsvCompare, printInfo, writeToFile } from \"./PrintFunction.js\";\r\nimport { TeacherTakingAut } from \"../teacher/TeacherTakingAut.js\";\r\nimport { L_star } from \"../learners/L_star.js\";\r\nimport { NL_star } from \"../learners/NL_star.js\";\r\nimport { Teacher } from \"../teacher/Teacher.js\";\r\n\r\nlet path = \"./statistics/benchMark/\",\r\n  fileName = \"benchMark\",\r\n  files = readdirSync(path),\r\n  automata: [Teacher, string][] = [],\r\n  toWrite = false;\r\n\r\n\r\nfor (const file of files) {\r\n  if (!file.endsWith('.ba')) continue\r\n  console.log(\"=\".repeat(90))\r\n  console.error(\"Creating automaton of file\", file);\r\n  console.log(\"Creating automaton of file\", file);\r\n  let content = readFileSync(path + file).toString();\r\n  let automaton = txtToAutomaton(content);\r\n  automata.push([new TeacherTakingAut({ automaton: automaton, regex: file }), file]);\r\n}\r\n\r\nconsole.log(\"=\".repeat(90))\r\nconsole.log(\"Automata created the ordered list of states is :\");\r\nautomata.sort((a, b) => a[0].automaton!.state_number() - b[0].automaton!.state_number())\r\nautomata.forEach(a => console.log(a[0].automaton!.state_number()));\r\n\r\nif (toWrite) {\r\n  clearFile(fileName);\r\n  writeToFile(fileName, csvHead);\r\n}\r\n\r\n\r\nfor (let index = 0; index < automata.length; index++) {\r\n  const [teacher, file] = automata[index];\r\n\r\n  teacher.description = index + \"\";\r\n\r\n  let L = new L_star(teacher),\r\n    NL = new NL_star(teacher);\r\n\r\n  console.log(\"=\".repeat(90))\r\n  console.error(index, \"Current benchmark :\", file, \"With state number\", teacher.automaton!.state_number());\r\n  console.log(index, \"Current benchmark :\", file, \"With state number\", teacher.automaton!.state_number());\r\n\r\n  console.log(\"In L*\");\r\n\r\n  L.make_all_queries();\r\n  console.log(printInfo(L, \"L*\"));\r\n  console.log(\"-\".repeat(80));\r\n  console.log(\"In NL*\");\r\n  NL.make_all_queries();\r\n  console.log(printInfo(NL, \"NL*\"));\r\n\r\n  console.log(printCsvCompare(L, NL));\r\n\r\n  if (toWrite) writeToFile(fileName, printCsvCompare(L, NL))\r\n}"],"file":"CompareBenchMark.js"}