{"version":3,"sources":["../../src/test_nodejs/PrintFunction.ts"],"names":["strict","appendFileSync","writeFileSync","printInfo","algo","algoName","member_number","equiv_number","automaton","state_number","transition_number","printCsvCompare","L","NL","teacher","regex","alphabet","length","csvHead","fileNameToCsv","fileName","clearFile","writeToFile","content"],"mappings":"AAGA,OAASA,MAAT,KAAuB,QAAvB,CACA,OAAqBC,cAArB,CAAgDC,aAAhD,KAAqE,IAArE,CAGA,MAAO,IAAIC,CAAAA,SAAS,CAAG,CAACC,IAAD,CAAmBC,QAAnB,GAAwC,CAC7D,MAAQ,GAAEA,QAAS,gBAAeD,IAAI,CAACE,aAAc,aAAYF,IAAI,CAACG,YAAa,cAAaH,IAAI,CAACI,SAAL,EAAgBC,YAAhB,EAA+B,mBAAkBL,IAAI,CAACI,SAAL,EAAgBE,iBAAhB,EAAoC,EACtL,CAFM,CAIP,MAAO,IAAIC,CAAAA,eAAe,CAAG,CAACC,CAAD,CAAYC,EAAZ,GAA4B,CACvDb,MAAM,CAACY,CAAC,CAACE,OAAF,EAAaD,EAAE,CAACC,OAAjB,CAAN,CACA,MAAQ,GAAEF,CAAC,CAACE,OAAF,CAAUC,KAAM,IAAGH,CAAC,CAACE,OAAF,CAAUE,QAAV,CAAmBC,MAAO,IAAGL,CAAC,CAACN,aAAc,IAAGM,CAAC,CAACL,YAAa,IAAGK,CAAC,CAACJ,SAAF,EAAaC,YAAb,EAA4B,IAAGG,CAAC,CAACJ,SAAF,EAAaE,iBAAb,EAAiC,IAAGG,EAAE,CAACP,aAAc,IAAGO,EAAE,CAACN,YAAa,IAAGM,EAAE,CAACL,SAAH,EAAcC,YAAd,EAA6B,IAAGI,EAAE,CAACL,SAAH,EAAcE,iBAAd,EAAkC,EAC5Q,CAHM,CAKP,MAAO,IAAIQ,CAAAA,OAAO,CAAG,2LAAd,CAEP,GAAIC,CAAAA,aAAa,CAAIC,QAAD,EAAsB,gBAAkBA,QAAlB,CAA6B,MAAvE,CAEA,MAAO,IAAIC,CAAAA,SAAS,CAAID,QAAD,EAAsBlB,aAAa,CAACiB,aAAa,CAACC,QAAD,CAAd,CAA0B,EAA1B,CAAnD,CAEP,MAAO,IAAIE,CAAAA,WAAW,CAAG,CAACF,QAAD,CAAmBG,OAAnB,GAAuC,CAC9DtB,cAAc,CAACkB,aAAa,CAACC,QAAD,CAAd,CAA0BG,OAAO,CAAG,IAApC,CACf,CAFM","sourcesContent":["import { L_star } from \"../lerners/L_star.js\";\r\nimport { NL_star } from \"../lerners/NL_star.js\";\r\nimport { LernerBase } from \"../lerners/LernerBase.js\";\r\nimport { strict } from \"assert\";\r\nimport { appendFile, appendFileSync, writeFile, writeFileSync } from \"fs\";\r\n\r\n\r\nexport let printInfo = (algo: LernerBase, algoName: string) => {\r\n  return `${algoName} : queries = ${algo.member_number}, equiv = ${algo.equiv_number}, states = ${algo.automaton?.state_number()}, transitions = ${algo.automaton?.transition_number()}`;\r\n}\r\n\r\nexport let printCsvCompare = (L: L_star, NL: NL_star) => {\r\n  strict(L.teacher == NL.teacher)\r\n  return `${L.teacher.regex},${L.teacher.alphabet.length},${L.member_number},${L.equiv_number},${L.automaton?.state_number()},${L.automaton?.transition_number()},${NL.member_number},${NL.equiv_number},${NL.automaton?.state_number()},${NL.automaton?.transition_number()}`;\r\n}\r\n\r\nexport let csvHead = \"Regex,Length alphabet,L Membership queries,L Equivalence queries,L State nb in A,L Transition nb in A,NL Membership queries,NL Equivalence queries,NL State nb in A,NL Transition nb in A\"\r\n\r\nlet fileNameToCsv = (fileName: string) => \"./statistics/\" + fileName + \".csv\"\r\n\r\nexport let clearFile = (fileName: string) => writeFileSync(fileNameToCsv(fileName), \"\")\r\n\r\nexport let writeToFile = (fileName: string, content: string) => {\r\n  appendFileSync(fileNameToCsv(fileName), content + \"\\n\")\r\n}"],"file":"PrintFunction.js"}