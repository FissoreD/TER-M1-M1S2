{"version":3,"sources":["../../src/test_nodejs/LearnerCompare.ts"],"names":["NL_star","L_star","teachers","clearFile","csvHead","printCsvCompare","printInfo","writeToFile","TeacherTakingAut","readFileSync","Automaton","fileName","writeToFileB","teachers1","automaton","strToAutomaton","toString","regex","index","length","teacher","description","L","NL","console","log","make_all_queries"],"mappings":"AAAA,OAASA,OAAT,KAAwB,wBAAxB,CACA,OAASC,MAAT,KAAuB,uBAAvB,CACA,OAASC,QAAT,KAAyB,uBAAzB,CACA,OAASC,SAAT,CAAoBC,OAApB,CAA6BC,eAA7B,CAA8CC,SAA9C,CAAyDC,WAAzD,KAA4E,oBAA5E,CAEA,OAASC,gBAAT,KAAiC,gCAAjC,CACA,OAASC,YAAT,KAA6B,IAA7B,CACA,OAASC,SAAT,KAA0B,2BAA1B,CAaA,GAAIC,CAAAA,QAAQ,CAAG,aAAf,CAA8BC,YAAY,CAAG,KAA7C,CACEC,SAAS,CAAG,CAAC,GAAGX,QAAJ,CAAc,GAAIM,CAAAA,gBAAJ,CAAqB,CAAEM,SAAS,CAAEJ,SAAS,CAACK,cAAV,CAAyBN,YAAY,CAAC,oCAAD,CAAZ,CAAmDO,QAAnD,EAAzB,CAAb,CAAsGC,KAAK,CAAE,aAA7G,CAArB,CAAd,CADd,CAGA,GAAIL,YAAJ,CAAkB,CAChBT,SAAS,CAACQ,QAAD,CAAT,CACAJ,WAAW,CAACI,QAAD,CAAWP,OAAX,CACZ,CACD,IAAK,GAAIc,CAAAA,KAAK,CAAG,CAAjB,CAAoBA,KAAK,CAAGL,SAAS,CAACM,MAAtC,CAA8CD,KAAK,EAAnD,CAAuD,CACrD,KAAME,CAAAA,OAAO,CAAGP,SAAS,CAACK,KAAD,CAAzB,CACAE,OAAO,CAACC,WAAR,CAAsBH,KAAK,CAAG,EAA9B,CAEA,GAAII,CAAAA,CAAC,CAAG,GAAIrB,CAAAA,MAAJ,CAAWmB,OAAX,CAAR,CACA,GAAIG,CAAAA,EAAE,CAAG,GAAIvB,CAAAA,OAAJ,CAAYoB,OAAZ,CAAT,CAEAI,OAAO,CAACC,GAAR,CAAY,gCAAZ,EACAD,OAAO,CAACC,GAAR,CAAY,mBAAZ,CAAiCL,OAAO,CAACH,KAAzC,CAAgDG,OAAO,CAACC,WAAxD,EAEAC,CAAC,CAACI,gBAAF,GACAF,OAAO,CAACC,GAAR,CAAYnB,SAAS,CAACgB,CAAD,CAAI,IAAJ,CAArB,EAEAC,EAAE,CAACG,gBAAH,GACAF,OAAO,CAACC,GAAR,CAAYnB,SAAS,CAACiB,EAAD,CAAK,KAAL,CAArB,EAEA,GAAIX,YAAJ,CACEL,WAAW,CAACI,QAAD,CAAWN,eAAe,CAACiB,CAAD,CAAIC,EAAJ,CAA1B,CACd","sourcesContent":["import { NL_star } from \"../learners/NL_star.js\";\r\nimport { L_star } from \"../learners/L_star.js\";\r\nimport { teachers } from \"../teacher/Teacher.js\";\r\nimport { clearFile, csvHead, printCsvCompare, printInfo, writeToFile } from \"./PrintFunction.js\";\r\nimport { myLog } from \"../tools/Utilities.js\";\r\nimport { TeacherTakingAut } from \"../teacher/TeacherTakingAut.js\";\r\nimport { readFileSync } from \"fs\";\r\nimport { Automaton } from \"../automaton/Automaton.js\";\r\n\r\n/**\r\n * About this file : \r\n * The goal here is to compare L and NL algo in term\r\n * of the number of queries and equiv function that \r\n * the learner will ask to the teacher.\r\n * We measure in this way a particular kind of \r\n * complexity of these algorithms and will try to \r\n * test which one of the two algorithms will perform less\r\n * interactions with the teacher.\r\n */\r\n\r\nlet fileName = \"randomRegex\", writeToFileB = false,\r\n  teachers1 = [...teachers, new TeacherTakingAut({ automaton: Automaton.strToAutomaton(readFileSync('./statistics/benchMark/2-0.1/A6.ba').toString()), regex: '2-0.1/A6.ba' })];\r\n\r\nif (writeToFileB) {\r\n  clearFile(fileName)\r\n  writeToFile(fileName, csvHead)\r\n}\r\nfor (let index = 0; index < teachers1.length; index++) {\r\n  const teacher = teachers1[index];\r\n  teacher.description = index + \"\";\r\n\r\n  let L = new L_star(teacher);\r\n  let NL = new NL_star(teacher);\r\n\r\n  console.log(\"==============================\");\r\n  console.log(\"Current regexp : \", teacher.regex, teacher.description);\r\n\r\n  L.make_all_queries()\r\n  console.log(printInfo(L, \"L*\"))\r\n\r\n  NL.make_all_queries()\r\n  console.log(printInfo(NL, \"NL*\"))\r\n\r\n  if (writeToFileB)\r\n    writeToFile(fileName, printCsvCompare(L, NL))\r\n}"],"file":"LearnerCompare.js"}