{"version":3,"sources":["../../src/test_nodejs/LernerCompare.ts"],"names":["NL_star","L_star","teachers","clearFile","csvHead","printCsvCompare","printInfo","writeToFile","fileName","index","length","teacher","description","L","NL","console","log","regex","make_all_queries"],"mappings":"AAAA,OAASA,OAAT,KAAwB,wBAAxB,CACA,OAASC,MAAT,KAAuB,uBAAvB,CACA,OAASC,QAAT,KAAyB,uBAAzB,CACA,OAASC,SAAT,CAAoBC,OAApB,CAA6BC,eAA7B,CAA8CC,SAA9C,CAAyDC,WAAzD,KAA4E,oBAA5E,CAYA,GAAIC,CAAAA,QAAQ,CAAG,aAAf,CACAL,SAAS,CAACK,QAAD,CAAT,CACAD,WAAW,CAACC,QAAD,CAAWJ,OAAX,CAAX,CAEA,IAAK,GAAIK,CAAAA,KAAK,CAAG,CAAjB,CAAoBA,KAAK,CAAGP,QAAQ,CAACQ,MAArC,CAA6CD,KAAK,EAAlD,CAAsD,CACpD,KAAME,CAAAA,OAAO,CAAGT,QAAQ,CAACO,KAAD,CAAxB,CACAE,OAAO,CAACC,WAAR,CAAsBH,KAAK,CAAG,EAA9B,CAEA,GAAII,CAAAA,CAAC,CAAG,GAAIZ,CAAAA,MAAJ,CAAWU,OAAX,CAAR,CACA,GAAIG,CAAAA,EAAE,CAAG,GAAId,CAAAA,OAAJ,CAAYW,OAAZ,CAAT,CAEAI,OAAO,CAACC,GAAR,CAAY,gCAAZ,EACAD,OAAO,CAACC,GAAR,CAAY,mBAAZ,CAAiCL,OAAO,CAACM,KAAzC,CAAgDN,OAAO,CAACC,WAAxD,EAEAC,CAAC,CAACK,gBAAF,GACAZ,SAAS,CAACO,CAAD,CAAI,IAAJ,CAAT,CAEAC,EAAE,CAACI,gBAAH,GACAZ,SAAS,CAACO,CAAD,CAAI,KAAJ,CAAT,CAEAN,WAAW,CAACC,QAAD,CAAWH,eAAe,CAACQ,CAAD,CAAIC,EAAJ,CAA1B,CACZ","sourcesContent":["import { NL_star } from \"../learners/NL_star.js\";\r\nimport { L_star } from \"../learners/L_star.js\";\r\nimport { teachers } from \"../teacher/Teacher.js\";\r\nimport { clearFile, csvHead, printCsvCompare, printInfo, writeToFile } from \"./PrintFunction.js\";\r\n/**\r\n * About this file : \r\n * The goal here is to compare L and NL algo in term\r\n * of the number of queries and equiv function that \r\n * the learner will ask to the teacher.\r\n * We measure in this way a particular kind of \r\n * complexity of these algorithms and will try to \r\n * test which one of the two algorithms will perform less\r\n * interactions with the teacher.\r\n */\r\n\r\nlet fileName = \"randomRegex\";\r\nclearFile(fileName)\r\nwriteToFile(fileName, csvHead)\r\n\r\nfor (let index = 0; index < teachers.length; index++) {\r\n  const teacher = teachers[index];\r\n  teacher.description = index + \"\";\r\n\r\n  let L = new L_star(teacher);\r\n  let NL = new NL_star(teacher);\r\n\r\n  console.log(\"==============================\");\r\n  console.log(\"Current regexp : \", teacher.regex, teacher.description);\r\n\r\n  L.make_all_queries()\r\n  printInfo(L, \"L*\")\r\n\r\n  NL.make_all_queries()\r\n  printInfo(L, \"NL*\")\r\n\r\n  writeToFile(fileName, printCsvCompare(L, NL))\r\n}"],"file":"LernerCompare.js"}