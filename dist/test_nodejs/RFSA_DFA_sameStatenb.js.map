{"version":3,"sources":["../../src/test_nodejs/RFSA_DFA_sameStatenb.ts"],"names":["clearFile","csvHead","printCsvCompare","printInfo","writeToFile","L_star","NL_star","TeacherAutomaton","regexToAutomaton","myLog","teacherList","i","regex","j","repeat","push","automaton","description","console","log","toWrite","fileName","length","teacher","L","NL","a","toLog","make_all_queries"],"mappings":"AACA,OAASA,SAAT,CAAoBC,OAApB,CAA6BC,eAA7B,CAA8CC,SAA9C,CAAyDC,WAAzD,KAA4E,oBAA5E,CACA,OAASC,MAAT,KAAuB,uBAAvB,CACA,OAASC,OAAT,KAAwB,wBAAxB,CACA,OAASC,gBAAT,KAAiC,gCAAjC,CAEA,OAA8CC,gBAA9C,KAAsE,gCAAtE,CACA,OAAgCC,KAAhC,KAA6C,uBAA7C,CAeA,GAAIC,CAAAA,WAA+B,CAAG,EAAtC,CAEA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,EAApB,CAAwBA,CAAC,EAAzB,CAA6B,CAC3B,GAAIC,CAAAA,KAAK,CAAG,GAAZ,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGF,CAApB,CAAuBE,CAAC,EAAxB,CAA4B,CAC1BD,KAAK,CAAGA,KAAK,CAAG,GAAR,CAAc,IAAIE,MAAJ,CAAW,EAAID,CAAJ,CAAQ,CAAnB,CAAd,EAAuCA,CAAC,CAAG,CAAJ,CAAS,IAAM,IAAIC,MAAJ,CAAW,EAAID,CAAf,CAAf,CAAoC,EAA3E,CACT,CACDH,WAAW,CAACK,IAAZ,CAAiB,GAAIR,CAAAA,gBAAJ,CAAqB,CAAES,SAAS,CAAER,gBAAgB,CAACI,KAAD,CAA7B,CAAsCK,WAAW,CAAEN,CAAC,CAAG,EAAvD,CAArB,CAAjB,EACAO,OAAO,CAACC,GAAR,CAAYR,CAAZ,CAED,CAED,GAAIS,CAAAA,OAAO,CAAG,IAAd,CAEA,GAAIC,CAAAA,QAAQ,CAAG,YAAf,CACA,GAAID,OAAJ,CAAa,CACXpB,SAAS,CAACqB,QAAD,CAAT,CACAjB,WAAW,CAACiB,QAAD,CAAWpB,OAAX,CACZ,CAED,IAAK,GAAIU,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGD,WAAW,CAACY,MAAhC,CAAwCX,CAAC,EAAzC,CAA6C,CAO3C,GAAIY,CAAAA,OAAO,CAAGb,WAAW,CAACC,CAAD,CAAzB,CAEA,GAAIa,CAAAA,CAAC,CAAG,GAAInB,CAAAA,MAAJ,CAAWkB,OAAX,CAAR,CACA,GAAIE,CAAAA,EAAE,CAAG,GAAInB,CAAAA,OAAJ,CAAYiB,OAAZ,CAAT,CAEAd,KAAK,CAAC,CAAEiB,CAAC,CAAE,CAAC,IAAIZ,MAAJ,CAAW,GAAX,CAAD,CAAL,CAAwBa,KAAK,CAAE,IAA/B,CAAD,CAAL,CACAlB,KAAK,CAAC,CAAEiB,CAAC,CAAE,CAAC,cAAD,CAAiBf,CAAjB,CAAL,CAA0BgB,KAAK,CAAE,IAAjC,CAAD,CAAL,CAEAlB,KAAK,CAAC,CAAEiB,CAAC,CAAE,CAAC,OAAD,CAAL,CAAgBC,KAAK,CAAE,IAAvB,CAAD,CAAL,CACAH,CAAC,CAACI,gBAAF,GACAnB,KAAK,CAAC,CAAEiB,CAAC,CAAE,CAACvB,SAAS,CAACqB,CAAD,CAAI,IAAJ,CAAV,CAAL,CAA2BG,KAAK,CAAE,IAAlC,CAAD,CAAL,CAEAlB,KAAK,CAAC,CAAEiB,CAAC,CAAE,CAAC,QAAD,CAAL,CAAiBC,KAAK,CAAE,IAAxB,CAAD,CAAL,CACAF,EAAE,CAACG,gBAAH,GACAnB,KAAK,CAAC,CAAEiB,CAAC,CAAE,CAACvB,SAAS,CAACsB,EAAD,CAAK,KAAL,CAAV,CAAL,CAA6BE,KAAK,CAAE,IAApC,CAAD,CAAL,CAEA,GAAIP,OAAJ,CAAahB,WAAW,CAACiB,QAAD,CAAWnB,eAAe,CAACsB,CAAD,CAAIC,EAAJ,CAA1B,CACzB","sourcesContent":["import { LearnerBase } from \"../learners/LearnerBase.js\";\r\nimport { clearFile, csvHead, printCsvCompare, printInfo, writeToFile } from \"./PrintFunction.js\";\r\nimport { L_star } from \"../learners/L_star.js\";\r\nimport { NL_star } from \"../learners/NL_star.js\";\r\nimport { TeacherAutomaton } from \"../teacher/TeacherAutomaton.js\";\r\nimport { Automaton, State } from \"../automaton/Automaton.js\";\r\nimport { minimizeAutomaton, MyAutomatonToHis, regexToAutomaton } from \"../automaton/automaton_type.js\";\r\nimport { allStringFromAlphabet, myLog } from \"../tools/Utilities.js\";\r\nimport { TeacherRegex } from \"../teacher/TeacherRegex.js\";\r\nimport { TeacherAutomatonStr } from \"../teacher/TeacherAutomatonStr.js\";\r\n\r\n/**\r\n * About this file : \r\n * The goal here is to compare L and NL algo in term\r\n * of the number of queries and equiv function that \r\n * the learner will ask to the teacher.\r\n * We measure in this way a particular kind of \r\n * complexity of these algorithms and will try to \r\n * test which one of the two algorithms will perform less\r\n * interactions with the teacher.\r\n */\r\n\r\nlet teacherList: TeacherAutomaton[] = [];\r\n\r\nfor (let i = 0; i < 20; i++) {\r\n  let regex = \"$\";\r\n  for (let j = 0; j < i; j++) {\r\n    regex = regex + \"+\" + \"a\".repeat(2 * j + 1) + (j > 0 ? (\"+\" + \"b\".repeat(2 * j)) : \"\")\r\n  }\r\n  teacherList.push(new TeacherAutomaton({ automaton: regexToAutomaton(regex), description: i + \"\" }))\r\n  console.log(i);\r\n\r\n}\r\n\r\nlet toWrite = true\r\n\r\nlet fileName = \"sameStates\";\r\nif (toWrite) {\r\n  clearFile(fileName)\r\n  writeToFile(fileName, csvHead)\r\n}\r\n\r\nfor (let i = 0; i < teacherList.length; i++) {\r\n  // let automaton = automatonList[i]\r\n  // let teacher = new TeacherAutomaton({\r\n  //   automaton: automaton,\r\n  //   description: (N + i) + \"\",\r\n  //   counter_examples: counter_examples\r\n  // })\r\n  let teacher = teacherList[i];\r\n\r\n  let L = new L_star(teacher)\r\n  let NL = new NL_star(teacher)\r\n\r\n  myLog({ a: [\"=\".repeat(100)], toLog: true });\r\n  myLog({ a: [\"Current n : \", i], toLog: true });\r\n\r\n  myLog({ a: [\"In L*\"], toLog: true });\r\n  L.make_all_queries();\r\n  myLog({ a: [printInfo(L, \"L*\")], toLog: true });\r\n\r\n  myLog({ a: [\"In NL*\"], toLog: true });\r\n  NL.make_all_queries();\r\n  myLog({ a: [printInfo(NL, \"NL*\")], toLog: true });\r\n\r\n  if (toWrite) writeToFile(fileName, printCsvCompare(L, NL))\r\n}\r\n"],"file":"RFSA_DFA_sameStatenb.js"}