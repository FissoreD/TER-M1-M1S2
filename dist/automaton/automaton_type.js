import{Automaton}from"../automaton/Automaton.js";import{noam}from"../../public/noam.js";export function HisAutomaton2Mine(aut){let res={alphabet:Array.from(aut.alphabet),acceptingStates:aut.acceptingStates.map(e=>e+""),startState:typeof aut.initialState==="number"?[aut.initialState+""]:Array.from(aut.initialState).map(e=>e+""),states:aut.states.map(e=>e+""),transitions:aut.transitions.map(e=>({fromState:e.fromState+"",symbol:e.symbol,toStates:e.toStates.map(e=>e+"")}))};return new Automaton(res)}export function MyAutomatonToHis(aut){let state2int=state=>aut.states.indexOf(state);let states=aut.states.map(e=>state2int(e));let startState=states.length;let transitions=aut.transitions.map(e=>({fromState:state2int(e.fromState),symbol:e.symbol,toStates:e.toStates.map(e=>state2int(e))}));if(aut.startState.length>1){transitions.push({fromState:startState,symbol:"$",toStates:aut.startState.map(e=>state2int(e))});states.push(startState)}else startState=state2int(aut.startState[0]);let res={acceptingStates:aut.acceptingStates.map(e=>state2int(e)),alphabet:Array.from(aut.alphabet),states:states,initialState:startState,transitions:transitions};return res}export function regexToAutomaton(regex){let res=noam.fsm.minimize(noam.fsm.convertEnfaToNfa(noam.re.string.toAutomaton(regex)));return HisAutomaton2Mine(res)}export function minimizeAutomaton(automaton){automaton=noam.fsm.convertEnfaToNfa(automaton);automaton=noam.fsm.convertNfaToDfa(automaton);automaton=noam.fsm.minimize(automaton);return HisAutomaton2Mine(noam.fsm.convertStatesToNumbers(automaton))}export function intersectionAutomata(a1,a2){return minimizeAutomaton(noam.fsm.intersection(MyAutomatonToHis(a1),MyAutomatonToHis(a2)))}export function unionAutomata(a1,a2){let A1=MyAutomatonToHis(a1);let A2=MyAutomatonToHis(a2);let U=noam.fsm.union(A1,A2);let res=minimizeAutomaton(U);return res}export function complementAutomata(a1){return minimizeAutomaton(noam.fsm.complement(MyAutomatonToHis(a1)))}export function differenceAutomata(a1,a2){let c=complementAutomata(a2);return intersectionAutomata(a1,c)}
//# sourceMappingURL=automaton_type.js.map