{"version":3,"sources":["../../src/automaton/automaton_type.ts"],"names":["Automaton","noam","HisAutomaton2Mine","aut","res","alphabet","Array","from","acceptingStates","map","e","startState","initialState","states","transitions","fromState","symbol","toStates","MyAutomatonToHis","state2int","state","indexOf","length","push","regexToAutomaton","regex","fsm","minimize","convertEnfaToNfa","re","string","toAutomaton","minimizeAutomaton","automaton","convertNfaToDfa","convertStatesToNumbers","intersectionAutomata","a1","a2","intersection","unionAutomata","A1","A2","U","union","complementAutomata","complement","differenceAutomata","c"],"mappings":"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","sourcesContent":["\r\n// @ts-nocheck\r\nimport { Automaton, AutomatonJson } from \"../automaton/Automaton.js\";\r\nimport { noam } from '../../public/noam.js';\r\n\r\ninterface HisTransition {\r\n  fromState: number,\r\n  toStates: number[],\r\n  symbol: string\r\n}\r\n\r\ninterface HisAutomaton {\r\n  alphabet: string[],\r\n  initialState?: number | number[],\r\n  states: number[],\r\n  transitions: HisTransition[],\r\n  acceptingStates: number[]\r\n}\r\n\r\nexport function HisAutomaton2Mine(aut: HisAutomaton): Automaton {\r\n  let res: AutomatonJson = {\r\n    alphabet: Array.from(aut.alphabet),\r\n    acceptingStates: aut.acceptingStates.map(e => e + \"\"),\r\n    startState: (typeof aut.initialState === \"number\") ? [aut.initialState + \"\"] : Array.from(aut.initialState!).map(e => e + \"\"),\r\n    states: aut.states.map(e => e + \"\"),\r\n    transitions: aut.transitions.map(e => ({ fromState: e.fromState + \"\", symbol: e.symbol, toStates: e.toStates.map(e => e + \"\") }))\r\n  }\r\n  return new Automaton(res);\r\n}\r\n\r\nexport function MyAutomatonToHis(aut: Automaton): HisAutomaton {\r\n  let state2int = (state: string) => aut.states.indexOf(state);\r\n  let states = aut.states.map(e => state2int(e))\r\n  let startState = states.length;\r\n  let transitions = aut.transitions.map(e => ({\r\n    fromState: state2int(e.fromState), symbol: e.symbol, toStates: e.toStates.map(e => state2int(e))\r\n  }))\r\n  if (aut.startState.length > 1) {\r\n    transitions.push(({\r\n      fromState: startState,\r\n      symbol: \"$\",\r\n      toStates: aut.startState.map(e => state2int(e))\r\n    }));\r\n    states.push(startState)\r\n  } else startState = state2int(aut.startState[0])\r\n  let res: HisAutomaton = {\r\n    acceptingStates: aut.acceptingStates.map(e => state2int(e)),\r\n    alphabet: Array.from(aut.alphabet),\r\n    states: states,\r\n    initialState: startState,\r\n    transitions: transitions\r\n  }\r\n  return res;\r\n}\r\n\r\nexport function regexToAutomaton(regex: string): Automaton {\r\n  let res = noam.fsm.minimize(noam.fsm.convertEnfaToNfa(noam.re.string.toAutomaton(regex)));\r\n  return HisAutomaton2Mine(res);\r\n}\r\n\r\nexport function minimizeAutomaton(automaton: HisAutomaton): Automaton {\r\n  automaton = noam.fsm.convertEnfaToNfa(automaton);\r\n  automaton = noam.fsm.convertNfaToDfa(automaton);\r\n  automaton = noam.fsm.convertStatesToNumbers(automaton)\r\n  // HELP PROFESSORI\r\n  automaton = noam.fsm.minimize(automaton);\r\n\r\n  // let myAutomaton = HisAutomaton2Mine(noam.fsm.convertStatesToNumbers(automaton));\r\n  // console.log(myAutomaton.matrix_to_mermaid());\r\n  // let minimized = myAutomaton.minimize()\r\n  // console.log(\"-\".repeat(50));\r\n  // console.log(JSON.stringify(automaton, null, 4));\r\n\r\n  // console.log(minimized.matrix_to_mermaid());\r\n  // console.log(\"=\".repeat(50));\r\n  // return minimized\r\n  return HisAutomaton2Mine(noam.fsm.convertStatesToNumbers(automaton))\r\n}\r\n\r\nexport function intersectionAutomata(a1: Automaton, a2: Automaton): Automaton {\r\n  return minimizeAutomaton(noam.fsm.intersection(MyAutomatonToHis(a1), MyAutomatonToHis(a2)))\r\n}\r\n\r\nexport function unionAutomata(a1: Automaton, a2: Automaton): Automaton {\r\n  let A1 = MyAutomatonToHis(a1);\r\n  let A2 = MyAutomatonToHis(a2);\r\n  let U: HisAutomaton = noam.fsm.union(A1, A2);\r\n  let res = minimizeAutomaton(U)\r\n  return res\r\n}\r\n\r\nexport function complementAutomata(a1: Automaton): Automaton {\r\n  return minimizeAutomaton(noam.fsm.complement(MyAutomatonToHis(a1)))\r\n}\r\n\r\nexport function differenceAutomata(a1: Automaton, a2: Automaton): Automaton {\r\n  let c = complementAutomata(a2);\r\n  return intersectionAutomata(a1, c)\r\n}"],"file":"automaton_type.js"}