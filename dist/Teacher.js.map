{"version":3,"sources":["../src/Teacher.ts"],"names":["differenceAutomata","minimizeAutomaton","MyAutomatonToHis","regexToAutomaton","boolToString","count_str_occurrences","Teacher","counter_exemples_pos","max_word_length","constructor","description","regex","f","counter_exemples","check_function","counter","automaton","alphabet","Array","from","initiate_mapping","res","sort","level","length","res1","forEach","e","a","push","member","sentence","accept_word_nfa","equiv","counterExemple","automatonDiff","acceptingStates","undefined","toExplore","startState","explored","parent","states","fill","symbol","current","shift","includes","transition","transitions","toStates","fromState","indexOf","id","reverse","join","automMinimized","diff1","diff2","counterEx1","counterEx2","console","log","teacher_a_or_baStar","parity","teacherPairZeroAndOne","teacherA3fromLast","teacherEvenAandThreeB","teacherNotAfourthPos","i","charAt","teacher_bStar_a_or_aStart_bStar","match","teacher_b_bStar_a__b_aOrb_star","_sentence","binaryAddition","charToBin","char","parseInt","toString","padStart","sentenceAr","map","fst_term","snd_term","trd_term","teachers"],"mappings":"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","sourcesContent":["import { Automaton } from \"./automaton/Automaton.js\";\r\nimport { differenceAutomata, minimizeAutomaton, MyAutomatonToHis, regexToAutomaton } from \"./automaton/automaton_type.js\";\r\nimport { boolToString, count_str_occurrences, myFunction } from \"./tools/Utilities.js\";\r\n\r\nexport class Teacher {\r\n  check_function: myFunction<string, boolean>;\r\n  counter_exemples: string[];\r\n  counter_exemples_pos = 0;\r\n  counter: number;\r\n  description: string;\r\n  alphabet: string[];\r\n  max_word_length = 8;\r\n  regex: string;\r\n  automaton: Automaton;\r\n\r\n  constructor(description: string, regex: string, f?: myFunction<string, boolean>, counter_exemples?: string[]) {\r\n    this.check_function = f || (() => true);\r\n    this.counter_exemples = counter_exemples || [];\r\n    this.counter = 0;\r\n    this.description = description;\r\n    this.automaton = regexToAutomaton(regex)\r\n    this.alphabet = Array.from(this.automaton.alphabet);\r\n    this.regex = regex;\r\n    // this.word_apperencance = initiate_mapping ? initiate_mapping : this.initiate_mapping();\r\n    // this.initiate_mapping()\r\n    // this.word_apperencance = this.word_apperencance.sort((a, b) => a[0].length - b[0].length);\r\n  }\r\n\r\n  initiate_mapping() {\r\n    let res: [string, boolean][] = [[\"\", this.check_function(\"\")]]\r\n    let alphabet = Array.from(this.alphabet).sort()\r\n    let level = [\"\"]\r\n    while (res[res.length - 1][0].length < this.max_word_length) {\r\n      let res1: string[] = []\r\n      level.forEach(e => alphabet.forEach(a => {\r\n        res.push([e + a, this.check_function(e + a)])\r\n        res1.push(e + a)\r\n      }))\r\n      level = res1\r\n    }\r\n    return res;\r\n  }\r\n\r\n  /*\r\n   * @param sentence the sentence to test the appartenance\r\n   * @returns the string \"0\" if the sentence is accepted else \"1\"\r\n   */\r\n  member(sentence: string): string {\r\n    // return boolToString(this.check_function(sentence));\r\n    return boolToString(this.automaton.accept_word_nfa(sentence)[0]);\r\n  }\r\n\r\n  equiv(automaton: Automaton): string | undefined {\r\n    if (this.counter_exemples_pos < this.counter_exemples.length) {\r\n      return this.counter_exemples[this.counter_exemples_pos++]\r\n    }\r\n    let counterExemple = (automatonDiff: Automaton): string | undefined => {\r\n      if (automatonDiff.acceptingStates.length == 0) return undefined;\r\n      let toExplore = [automatonDiff.startState[0]]\r\n      let explored: string[] = []\r\n      type parentChild = { parent: string, symbol: string }\r\n      let parent: parentChild[] = new Array(automatonDiff.states.length).fill({ parent: \"\", symbol: \"\" });\r\n      while (toExplore.length > 0) {\r\n        let current = toExplore.shift()!\r\n        if (explored.includes(current)) continue;\r\n        explored.push(current)\r\n        for (const transition of automatonDiff.transitions) {\r\n          if (!explored.includes(transition.toStates[0]) && transition.fromState == current) {\r\n            parent[automatonDiff.states.indexOf(transition.toStates[0])] =\r\n              { parent: transition.fromState, symbol: transition.symbol }\r\n            toExplore.push(transition.toStates[0])\r\n          }\r\n        }\r\n\r\n        if (automatonDiff.acceptingStates.includes(current)) {\r\n          let id = automatonDiff.states.indexOf(current);\r\n          let res: string[] = [parent[id].symbol]\r\n          while (parent[id].parent != \"\") {\r\n            id = automatonDiff.states.indexOf(parent[id].parent)\r\n            res.push(parent[id].symbol)\r\n          }\r\n          return res.reverse().join(\"\");\r\n        }\r\n      }\r\n      return \"\";\r\n    }\r\n    let automMinimized = minimizeAutomaton(MyAutomatonToHis(automaton));\r\n    let diff1 = differenceAutomata(this.automaton, automMinimized);\r\n    let diff2 = differenceAutomata(automMinimized, this.automaton);\r\n    // BREAKPOINT AFTER DIFF \r\n    let counterEx1 = counterExemple(diff1);\r\n    let counterEx2 = counterExemple(diff2);\r\n    // AFTER COUNTEREXEMPLE\r\n    console.log(`C1 = { ${counterEx1} }, C2 = { ${counterEx2} }`);\r\n\r\n    if (counterEx1 == undefined) return counterEx2;\r\n    if (counterEx2 == undefined) return counterEx1;\r\n    return counterEx1! < counterEx2! ? counterEx1 : counterEx2;\r\n  }\r\n}\r\n\r\n/** \r\n * a teacher accepting a + (ba)*\r\n */\r\nexport let teacher_a_or_baStar = new Teacher(\r\n  `Automata accepting \\\\(regex(a + (ba)*)\\\\)`, \"a+(ba)*\",\r\n  sentence => {\r\n    let parity = count_str_occurrences(sentence, \"0\");\r\n    return parity % 2 == 0 && sentence.length % 2 == 0;\r\n  }, []);\r\n\r\n/** \r\n * a teacher accepting the language over {0, 1}\r\n * of strings with even number of 0 and even number of 1\r\n */\r\nexport let teacherPairZeroAndOne = new Teacher(\r\n  `Automata accepting \\\\(L = \\\\{w \\\\in (0, 1)^* | \\\\#(w_0) \\\\% 2 = 0 \\\\land \\\\#(w_1) \\\\% 2 = 0\\\\}\\\\) <br/> → words with even nb of '0' and even nb of '1'`, \"(00+11+(01+10)(00+11)*(01+10))*\",\r\n  sentence => {\r\n    let parity = count_str_occurrences(sentence, \"0\");\r\n    return parity % 2 == 0 && sentence.length % 2 == 0;\r\n  }, [\"11\", \"011\"]);\r\n\r\n/**\r\n * a teacher accepting the language over {a, b}\r\n * of strings with an \"a\" in the third letter from end\r\n * (exemple abb, baab, bbabbaab)\r\n */\r\nexport let teacherA3fromLast = new Teacher(\r\n  `Automata accepting \\\\(L = \\\\{w \\\\in (a, b)^* | w[-3] = a\\\\}\\\\) <br/>\r\n    → words with an 'a' in the 3rd pos from end`, \"(a+b)*a(a+b)(a+b)\",\r\n  sentence => sentence.length >= 3 && sentence[sentence.length - 3] == 'a',\r\n  []\r\n  // [\"aaa\"]\r\n)\r\n/**\r\n * a teacher accepting the language over {a, b}\r\n * of strings with any even number of \"a\" or at least three \"b\"\r\n */\r\nexport let teacherEvenAandThreeB = new Teacher(\r\n  `Automata accepting \\\\(L = \\\\{w \\\\in (a, b)^* | \\\\#(w_b) \\\\geq 3 \\\\lor \\\\#(w_a) \\\\% 2 = 1\\\\}\\\\)\r\n  <br/> → words with at least 3 'b' or an odd nb of 'a'`, \"b*a(b+ab*a)*+(a+b)*ba*ba*b(a+b)*\",\r\n  sentence => count_str_occurrences(sentence, \"b\") >= 3 || count_str_occurrences(sentence, \"a\") % 2 == 1,\r\n  []\r\n  // [\"bbb\", \"ababb\", \"bbaab\", \"babba\"]\r\n);\r\n\r\n/**\r\n * a teacher accepting the language over {a, b}\r\n * of strings not having an a in a position multiple\r\n * of 4 \r\n */\r\nexport let teacherNotAfourthPos = new Teacher(\r\n  `Automata accepting \\\\(L = \\\\{w \\\\in (a,b)^* \\\\land i \\\\in 4\\\\mathbb{N} | w[i] \\\\neq a \\\\land i \\\\leq len(w)\\\\}\\\\) <br/>\r\n  → words without an 'a' in a position multiple of 4`, \"((a+b)(a+b)(a+b)b)*(a+b+$)(a+b+$)(a+b+$)\",\r\n  sentence => {\r\n    for (let i = 3; i < sentence.length; i += 4) {\r\n      if (sentence.charAt(i) == \"a\") return false;\r\n    }\r\n    return true;\r\n  },\r\n  []\r\n)\r\n\r\n/**\r\n * a teacher accepting the regex bb*a + a*b*\r\n */\r\nexport let teacher_bStar_a_or_aStart_bStar = new Teacher(\r\n  `Automata accepting \\\\(L = regex((bb^*a) + (a^*b^*))\\\\)`, \"(bb*a)+(a*b*)\",\r\n  sentence => {\r\n    return sentence.match(/^((b+a)|(a*b*))$/g) != undefined\r\n  }, []\r\n)\r\n\r\n/**\r\n * a teacher accepting the regex bb*($ + a(b(a+b))*)\r\n */\r\nexport let teacher_b_bStar_a__b_aOrb_star = new Teacher(\r\n  `Automata accepting \\\\(L = regex(bb^*($+a(b(a+b))^*)\\\\)`, \"bb*($+a(b(a+b))*)\",\r\n  _sentence => true, []\r\n)\r\n\r\nexport let binaryAddition = new Teacher(\r\n  `Automata accepting the sum between binary words, exemple : <br>\r\n  <pre>\r\n  0101 + \r\n  1001 = \r\n  1110 </pre>\r\n  we encode this sum as the concatenation of vectors of size 3 : <br>\r\n  <pre>\r\n  fst column 011 = 3\r\n  snd column 101 = 5 \r\n  trd column 001 = 1 \r\n  fth column 110 = 6 </pre>\r\n  so 3516 which is a valid word for the sum <br>\r\n  <input class=\"sum-calc sum-calc-style\" onkeyup=\"update_input()\"> + <br>\r\n  <input class=\"sum-calc sum-calc-style\" onkeyup=\"update_input()\"> = <br>\r\n  <input class=\"sum-calc sum-calc-style\" onkeyup=\"update_input()\"><br>\r\n  <button id=\"calc\" onclick=\"send_calc_button()\">Send</button>\r\n  <span class=\"sum-calc-style\" id=\"add-res\"></span>\r\n  `, \"((0+3+5)+1(7+4+2)*6)*\", sentence => {\r\n  let charToBin = (char: string) =>\r\n    (parseInt(char) >>> 0).toString(2).padStart(3, \"0\")\r\n  let sentenceAr = Array.from(sentence).map(e => charToBin(e))\r\n  // console.log(sentence)\r\n  let fst_term = parseInt(sentenceAr.map(e => e[0]).join(''), 2);\r\n  let snd_term = parseInt(sentenceAr.map(e => e[1]).join(''), 2);\r\n  let trd_term = parseInt(sentenceAr.map(e => e[2]).join(''), 2);\r\n  // console.log(fst_term, snd_term, trd_term);\r\n  return fst_term + snd_term == trd_term;\r\n}, []\r\n)\r\n\r\nexport let teachers = [teacher_a_or_baStar, teacher_b_bStar_a__b_aOrb_star, binaryAddition, teacherA3fromLast, teacherEvenAandThreeB, teacherNotAfourthPos, teacherPairZeroAndOne, teacher_bStar_a_or_aStart_bStar]"],"file":"Teacher.js"}