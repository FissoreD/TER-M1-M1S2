{"version":3,"sources":["../../src/lerners/L_star.ts"],"names":["Automaton","LernerBase","L_star","constructor","teacher","update_observation_table","key","value","old_value","observation_table","undefined","make_query","pref","suff","word","answer","i","length","pref1","substring","suff1","E","includes","S","SA","charAt","indexOf","query","query_number","make_member","a","member","member_number","make_automaton","states","forEach","e","first_state","keys","Object","end_states","filter","k","transitions","state","symbol","alphabet","push","fromState","toStates","automaton","is_close","find","t","some","s","same_row","is_consistent","s1_ind","s2_ind","s1","s2","b"],"mappings":"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","sourcesContent":["import { Automaton, Transition } from \"../automaton/Automaton.js\";\r\nimport { Teacher } from \"../Teacher.js\";\r\nimport { LernerBase, Map_string_string } from \"./LernerBase.js\";\r\n\r\nexport class L_star extends LernerBase {\r\n\r\n  constructor(teacher: Teacher) {\r\n    super(teacher)\r\n  }\r\n\r\n  update_observation_table(key: string, value: string) {\r\n    let old_value = this.observation_table[key];\r\n    if (old_value != undefined) value = old_value + value\r\n    this.observation_table[key] = value;\r\n  }\r\n\r\n  /**\r\n   * 1. Takes a string in parameter and s in {@link S} and e in {@link E}  \r\n   * 2. Asks to the {@link teacher} if question is accepted  \r\n   * 3. Updates {@link observation_table} wrt the answer  \r\n   * No modification is performed in {@link S}, {@link E} or {@link SA} sets\r\n   */\r\n  make_query(pref: string, suff: string) {\r\n    let word = pref + suff;\r\n    let answer: string;\r\n    // If we know already the answer, we do not query the teacher\r\n    for (let i = 0; i < word.length + 1; i++) {\r\n      let pref1 = word.substring(0, i);\r\n      let suff1 = word.substring(i);\r\n      if (pref1 == pref) continue;\r\n      if (this.E.includes(suff1)) {\r\n        if ((this.S.includes(pref1) || this.SA.includes(pref1)) && this.observation_table[pref1]) {\r\n          answer = this.observation_table[pref1].charAt(this.E.indexOf(suff1));\r\n          this.update_observation_table(pref, answer)\r\n          if (answer == undefined) throw 'Parameter is not a number!';\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    answer = this.teacher.query(word);\r\n    this.update_observation_table(pref, answer)\r\n    this.query_number++;\r\n  }\r\n\r\n  /**\r\n   * Takes in parameter an {@link Automaton} and ask \r\n   * to the teacher if the automaton knows the language.\r\n   * If so : the Lerner has learnt the language\r\n   * Else : it appends the counter-exemple to {@link S}\r\n   * @param a an Automaton\r\n   */\r\n  make_member(a: Automaton) {\r\n    let answer = this.teacher.member(a);\r\n    this.member_number++;\r\n    return answer;\r\n  }\r\n\r\n  make_automaton() {\r\n    let states: Map_string_string = {}\r\n    this.S.forEach(e => states[this.observation_table[e]] = e);\r\n    let first_state = this.observation_table[\"\"];\r\n    let keys = Object.keys(states);\r\n    let end_states: string[] = keys.filter(k => k[0] == '1');\r\n    // let transitions = keys.map(\r\n    //   (k) => this.alphabet.map(a => {\r\n    //     return [this.observation_table[states[k] + a]]\r\n    //   }));\r\n    let transitions: Transition[] = []\r\n    for (const state of this.S) {\r\n      for (const symbol of this.alphabet) {\r\n        transitions.push({\r\n          fromState: this.observation_table[state],\r\n          symbol: symbol,\r\n          toStates: [this.observation_table[state + symbol]]\r\n        })\r\n      }\r\n    }\r\n    this.automaton = new Automaton({\r\n      \"alphabet\": this.alphabet,\r\n      \"acceptingStates\": end_states,\r\n      \"startState\": [first_state],\r\n      \"states\": keys,\r\n      \"transitions\": transitions\r\n    })\r\n    return this.automaton;\r\n  }\r\n\r\n\r\n  /**\r\n   * @returns the first t in SA st it does not exist s in S st row(s) == row (s.a)\r\n   */\r\n  is_close(): string | undefined {\r\n    return this.SA.find(t => !this.S.some(s => this.same_row(s, t)));\r\n  }\r\n\r\n  /**\r\n   * @returns a list of 3 elements, \r\n   * the first two are s1, s2 in {@link S} st row(s1) == row(s2)\r\n   * and there is an \"a\" in alphabet st row(s1 + a) != row(s2 + a)\r\n   */\r\n  is_consistent(): string[] | undefined {\r\n    for (let s1_ind = 0; s1_ind < this.S.length; s1_ind++) {\r\n      for (let s2_ind = s1_ind + 1; s2_ind < this.S.length; s2_ind++) {\r\n        let s1 = this.S[s1_ind];\r\n        let s2 = this.S[s2_ind];\r\n        if (this.same_row(s1, s2)) {\r\n          for (const a of this.alphabet) {\r\n            for (let i = 0; i < this.E.length; i++) {\r\n              if (this.observation_table[s1 + a][i] !=\r\n                this.observation_table[s2 + a][i] && !this.E.includes(a + this.E[i]))\r\n                return [s1, s2, a + this.E[i]]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  same_row(a: string, b: string) {\r\n    return this.observation_table[a] == this.observation_table[b];\r\n  }\r\n}"],"file":"L_star.js"}