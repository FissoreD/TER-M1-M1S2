{"version":3,"sources":["../../src/learners/Observation_table.ts"],"names":["same_vector","Observation_table","constructor","columns","rows","matrix","add_column","column_name","push","add_row","row_name","set_value","bool","indexOf","get_value","get_row","same_row","row1","row2","r1","r2","undefined"],"mappings":"AAAA,OAASA,WAAT,KAA4B,uBAA5B,CAEA,MAAO,MAAMC,CAAAA,iBAAkB,CAK7BC,WAAW,EAAG,CACZ,KAAKC,OAAL,CAAe,EAAf,CACA,KAAKC,IAAL,CAAY,EAAZ,CACA,KAAKC,MAAL,CAAc,CAAC,EAAD,CACf,CAEDC,UAAU,CAACC,WAAD,CAAsB,CAC9B,KAAKJ,OAAL,CAAaK,IAAb,CAAkBD,WAAlB,CACD,CAEDE,OAAO,CAACC,QAAD,CAAmB,CACxB,KAAKN,IAAL,CAAUI,IAAV,CAAeE,QAAf,CACD,CAEDC,SAAS,CAACD,QAAD,CAAmBH,WAAnB,CAAwCK,IAAxC,CAAuD,CAC9D,KAAKP,MAAL,CAAY,KAAKD,IAAL,CAAUS,OAAV,CAAkBH,QAAlB,CAAZ,EAAyC,KAAKP,OAAL,CAAaU,OAAb,CAAqBN,WAArB,CAAzC,EAA8EK,IAC/E,CAKDE,SAAS,CAACJ,QAAD,CAAmBH,WAAnB,CAAwC,CAC/C,MAAO,MAAKF,MAAL,CAAY,KAAKD,IAAL,CAAUS,OAAV,CAAkBH,QAAlB,CAAZ,EAAyC,KAAKP,OAAL,CAAaU,OAAb,CAAqBN,WAArB,CAAzC,CACR,CAKDQ,OAAO,CAACL,QAAD,CAAmB,CACxB,MAAO,MAAKL,MAAL,CAAY,KAAKD,IAAL,CAAUS,OAAV,CAAkBH,QAAlB,CAAZ,CACR,CAKDM,QAAQ,CAACC,IAAD,CAAeC,IAAf,CAA6B,CACnC,KAAMC,CAAAA,EAAE,CAAG,KAAKJ,OAAL,CAAaE,IAAb,CAAX,CACA,KAAMG,CAAAA,EAAE,CAAG,KAAKL,OAAL,CAAaG,IAAb,CAAX,CACA,MAAOC,CAAAA,EAAE,EAAIE,SAAN,EAAmBD,EAAE,EAAIC,SAAzB,EACLrB,WAAW,CAACmB,EAAD,CAAKC,EAAL,CACd,CA7C4B","sourcesContent":["import { same_vector } from \"../tools/Utilities.js\";\r\n\r\nexport class Observation_table {\r\n  private columns: string[];\r\n  private rows: string[];\r\n  private matrix: boolean[][];\r\n\r\n  constructor() {\r\n    this.columns = []\r\n    this.rows = []\r\n    this.matrix = [[]];\r\n  }\r\n\r\n  add_column(column_name: string) {\r\n    this.columns.push(column_name);\r\n  }\r\n\r\n  add_row(row_name: string) {\r\n    this.rows.push(row_name);\r\n  }\r\n\r\n  set_value(row_name: string, column_name: string, bool: boolean) {\r\n    this.matrix[this.rows.indexOf(row_name)][this.columns.indexOf(column_name)] = bool;\r\n  }\r\n\r\n  /**\r\n   * @returns the value at row_name, column_name of the matrix\r\n   */\r\n  get_value(row_name: string, column_name: string) {\r\n    return this.matrix[this.rows.indexOf(row_name)][this.columns.indexOf(column_name)];\r\n  }\r\n\r\n  /**\r\n   * @returns the list of boolean of row_name \r\n   */\r\n  get_row(row_name: string) {\r\n    return this.matrix[this.rows.indexOf(row_name)];\r\n  }\r\n\r\n  /**\r\n   * @return if row1 == row2\r\n   */\r\n  same_row(row1: string, row2: string) {\r\n    const r1 = this.get_row(row1);\r\n    const r2 = this.get_row(row2);\r\n    return r1 != undefined && r2 != undefined &&\r\n      same_vector(r1, r2);\r\n  }\r\n}"],"file":"Observation_table.js"}